name: Security

on:
  pull_request_target:
    types: [labeled]
  push:
    branches: [main]

permissions:
  security-events: write

jobs:
  scan-snyk:
    name: Snyk
    runs-on: ubuntu-latest

    if: github.event.label.name == 'run' || github.ref_name == 'main'

    strategy:
      fail-fast: true
      max-parallel: 10
      matrix:
        php: ["8.0", "8.1", "8.1"]

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: mbstring
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - run: composer update --no-interaction --no-progress
      - uses: snyk/actions/php@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif
      - uses: andstor/file-existence-action@v1
        id: sarif_file_exists
        with:
          files: "snyk.sarif"
      - uses: github/codeql-action/upload-sarif@v2
        if: steps.sarif_file_exists.outputs.files_exists == 'true'
        with:
          sarif_file: snyk.sarif

  scan-semgrep:
    name: Semgrep
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep

    if: github.event.label.name == 'run' || github.ref_name == 'main'

    steps:
      - uses: actions/checkout@v3
      - run: semgrep scan --sarif --output=semgrep.sarif
        env:
          SEMGREP_RULES: >-
            p/phpcs-security-audit
            p/security-audit
            p/secrets
            p/owasp-top-ten
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          SEMGREP_REPO_NAME: "auth0/auth0-PHP"
          SEMGREP_REPO_URL: "https://github.com/auth0/auth0-PHP"
      - uses: andstor/file-existence-action@v1
        id: sarif_file_exists
        with:
          files: "semgrep.sarif"
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif
        if: always()
