version: 2.1

commands:
  prepare:
    steps:
      - checkout
      - run:
          name: Perform composer self-update
          command: sudo composer self-update
      - restore-cache
      - run:
          name: Enable code coverage
          command: |
            sudo apt update
            sudo apt install libonig-dev
            sudo pecl install pcov
            sudo docker-php-ext-enable pcov
            sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            sudo docker-php-ext-install posix
            sudo docker-php-ext-install pcntl
            sudo docker-php-ext-install mbstring
      - run:
          name: Install composer dependencies
          command: composer install --no-interaction --prefer-dist
      - run:
          name: Update composer dependencies
          command: composer update --prefer-dist --no-interaction
      - save-cache

  save-cache:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - composer.*
            - .snyk
      - save_cache:
          key: composer-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}
          paths:
            - vendor

  restore-cache:
    steps:
      - restore_cache:
          keys:
            - composer-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}
            - composer-v1-{{ .Environment.CIRCLE_JOB }}

  run-phpinsights:
    steps:
      - run:
          name: Run code quality analysis (PHP Insights)
          command: php ./vendor/bin/phpinsights -v --no-interaction --min-quality=90 --min-complexity=50 --min-architecture=90 --min-style=90

  run-phpstan:
    steps:
      - run:
          name: Run static code analysis (PHPStan)
          command: php ./vendor/bin/phpstan analyse --ansi --memory-limit 512M

  run-psalm:
    steps:
      - run:
          name: Run static code analysis (Psalm)
          command: php ./vendor/bin/psalm --threads=$(nproc)

  run-pest:
    steps:
      - run:
          name: Run unit tests (Pest)
          command: php ./vendor/bin/pest --stop-on-failure --min=80 --coverage-clover=build/coverage/coverage.xml --coverage-xml=build/coverage/coverage-xml --log-junit=build/coverage/junit.xml
      - persist_to_workspace:
          root: .
          paths:
            - src
            - tests
            - infection.json.dist
            - phpunit.xml.dist
            - build
            - vendor

  run-infection:
    steps:
      - run:
          name: Run mutation tests (Infection)
          command: php ./vendor/bin/infection --skip-initial-tests --threads=$(nproc) --test-framework=pest --coverage=build/coverage --no-progress --min-msi=48 --min-covered-msi=70

jobs:
  run-unit-tests:
    parameters:
      php:
        type: string
    docker:
      - image: circleci/php:<< parameters.php >>
    steps:
      - prepare
      - run-phpinsights
      - run-phpstan
      - run-psalm
      - run-pest

  run-security-tests:
    docker:
      - image: snyk/snyk-cli:composer
    steps:
      - attach_workspace:
          at: .
      - run: snyk test
      - run:
          command: |
            if [[ "${CIRCLE_BRANCH}" == "main" ]]
            then
            snyk monitor --org=auth0-sdks
            fi
          when: always

  run-mutation-tests:
    docker:
      - image: circleci/php:7.4
    steps:
      - attach_workspace:
          at: .
      - restore-cache
      - run-infection

  run-codecov-uploader:
    docker:
      - image: circleci/php:7.4
    steps:
      - attach_workspace:
          at: .
      - restore-cache
      - run:
          name: Download and validate Codecov uploader
          command: |
            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --import
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
            gpg --verify codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            chmod +x codecov
      - run:
          name: Upload coverage reports to Codecov
          command: ./codecov -t ${CODECOV_TOKEN} -f ./build/coverage/coverage.xml

workflows:
  run-tests:
    jobs:
      - run-unit-tests:
          name: run-pest-7.4
          php: "7.4"
      - run-unit-tests:
          name: run-pest-8.0
          php: "8.0"
      - run-security-tests:
          filters:
            branches:
              only:
                - main
          context: snyk-env
          requires: [run-pest-7.4]
      - run-mutation-tests:
          filters:
            branches:
              only:
                - main
          requires: [run-pest-7.4]
      - run-codecov-uploader:
          filters:
            branches:
              only:
                - main
          requires: [run-pest-7.4]
